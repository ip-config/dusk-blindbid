var searchIndex = JSON.parse('{\
"blind_bid":{"doc":"BlindBid impl","i":[[0,"bid","blind_bid","",null,null],[3,"Bid","blind_bid::bid","",null,null],[11,"new","","",0,[[["g1affine",3],["scalar",3]]]],[0,"proof","blind_bid","",null,null],[0,"blindbid_proof","blind_bid::proof","BlindBidProof module.",null,null],[5,"blind_bid_proof","blind_bid::proof::blindbid_proof","",null,[[["standardcomposer",3],["bid",3]]]],[0,"score_gen","blind_bid","",null,null],[0,"score","blind_bid::score_gen","Score generation",null,null],[5,"compute_score","blind_bid::score_gen::score","",null,[[["bid",3]],["scalar",3]]],[5,"compute_score_gadget","","Computes the score of the bid printing in theâ€¦",null,[[["standardcomposer",3],["bid",3],["variable",3]],["variable",3]]],[11,"from","blind_bid::bid","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"clone","","",0,[[],["bid",3]]],[11,"default","","",0,[[]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]]],"p":[[3,"Bid"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);